# Maintainer: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Evangelos Foutras <foutrelis@gmail.com>
# Contributor: Sebastian Nowicki <sebnow@gmail.com>
# Contributor: Devin Cofer <ranguvar{AT]archlinux[DOT}us>
# Contributor: Tobias Kieslich <tobias@justdreams.de>
# Contributor: Geoffroy Carrier <geoffroy.carrier@aur.archlinux.org>
# Contributor: Tomas Lindquist Olsen <tomas@famolsen.dk>
# Contributor: Roberto Alsina <ralsina@kde.org>
# Contributor: Gerardo Exequiel Pozzi <vmlinuz386@yahoo.com.ar>
# Contributor: mosra <mosra@centrum.cz>

pkgname=clang-svn
pkgver=153955
pkgrel=1
pkgdesc="Low Level Virtual Machine with Clang from SVN"
arch=('i686' 'x86_64')
url="http://llvm.org/"
license=('custom:University of Illinois/NCSA Open Source License')
depends=('gcc-libs' 'libffi' 'python2' "gcc")
makedepends=('svn' 'cmake')
provides=('clang' 'llvm')
conflicts=(llvm llvm-svn llvm-ocaml clang clang-analyzer)

_svntrunk="http://llvm.org/svn/llvm-project"
_svnmod="llvm"
_cfemod="cfe"
_crtmod="compiler-rt"
#_cxxmod="libcxx"

build() {
  msg2 "Connecting to LLVM.org SVN server...."

  cd "$srcdir"
  if [ -d $_svnmod/.svn ]; then
    (cd $_svnmod && svn update -r $pkgver) || warning "Update failed!"
  else
    svn co $_svntrunk/$_svnmod/trunk $_svnmod --config-dir "$srcdir" -r $pkgver
  fi

  cd "$srcdir/llvm/tools"
  if [ -d clang/.svn ]; then
    (cd clang && svn update -r $pkgver) || warning "Update failed!"
  else
    svn co $_svntrunk/$_cfemod/trunk clang --config-dir "$srcdir" -r $pkgver
  fi

  cd "$srcdir/llvm/projects"
  if [ -d compiler-rt/.svn ]; then
    (cd compiler-rt && svn update -r $pkgver) || warning "Update failed!"
  else
    svn co $_svntrunk/$_crtmod/trunk compiler-rt --config-dir "$srcdir" -r $pkgver
  fi

  msg2 "SVN checkout done or server timeout"

  # Parse GCC include paths.
  INCLUDES=`gcc -v -x c++ /dev/null -fsyntax-only 2>&1 | awk '{
    if ($0 ~ /End of search list./) {
      includes=0;
    }
    if (includes) {
      if (printed) {
        printf(":");
      }
      printf("%s", $1);
      printed=1;
    }
    if ($0 ~ /#include <...> search starts here:/) {
      includes=1;
    }
  }'`

  msg2 "Starting build..."

  cd "$srcdir"
  mkdir -p build && cd build

  cmake \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=Release \
    -LLVM_ENABLE_ASSERTIONS=OFF \
    -LLVM_ENABLE_FFI=ON \
    -DPYTHON_EXECUTABLE=/usr/bin/python2 \
    -DC_INCLUDE_DIRS="${INCLUDES}" \
    ../$_svnmod

    make
}

package() {
  cd "$srcdir/build"

  make DESTDIR=$pkgdir install

  cd ../$_svnmod

  install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

# vim:set ts=2 sw=2 et:
